services:
  # Backend API
  blucatch-backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: blucatch-backend
    ports:
      - "3001:3001"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_PATH=/app/data/pokemon.db
    volumes:
      - data:/app/data:ro
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Nginx)
  blucatch:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=/api
    container_name: blucatch
    ports:
      - "3000:80"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      blucatch-backend:
        condition: service_healthy
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Scraper service
  blucatch-scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    container_name: blucatch-scraper
    environment:
      - NODE_ENV=production
      - CRON_SCHEDULE=30 3 * * *
    restart: unless-stopped
    volumes:
      - data:/app/public/data
    networks:
      - pokemon-network
    depends_on:
      blucatch-backend:
        condition: service_healthy

networks:
  pokemon-network:
    driver: bridge

volumes:
  data:
